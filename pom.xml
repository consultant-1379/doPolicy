<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ericsson.orchestration.solutiondevelopment.assurance.apex</groupId>
    <artifactId>doPolicy</artifactId>
    <version>1.0-SNAPSHOT</version>

    <packaging>jar</packaging>

    <name>SD microservice project</name>
    <url>https://www.ericsson.com</url>


    <properties>
        <java.version>1.8</java.version>
        <sonar.scm.provider>git</sonar.scm.provider>
        <sonar.projectKey>SD-DoPolicy-Orion</sonar.projectKey> 
        <sonar.host.url>https://sonarqube.lmera.ericsson.se/</sonar.host.url>
        <sonar.login>62b5caa60076a420814bee87d5d9c442c1ebfcf0</sonar.login>
        <sonar.analysis.mode>preview</sonar.analysis.mode>
        <sonar.junit.reportPaths>target/surefire-reports/</sonar.junit.reportPaths>
        <sonar.jacoco.reportPaths>target/coverage-reports/jacoco-unit.exec</sonar.jacoco.reportPaths>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>
        <encoding>UTF-8</encoding>
        <file.encoding>UTF-8</file.encoding>
        <install.package.name>apex-doPolicy</install.package.name>
        <policymodel.name>ApexDoPolicyModel</policymodel.name>
        <docker.repository.name>apex/doPolicy</docker.repository.name>
        <dopolicy-dir>${project.basedir}/src</dopolicy-dir>
        <apex.version>2.0.4</apex.version>
        <junit.version>4.8.1</junit.version>
        <jsonsimple.version>1.1</jsonsimple.version>
        <json.version>20180130</json.version>
        <version.kafka>1.1.1</version.kafka>
    </properties>

    <!-- adding repositories in pom -->
    <repositories>
        <repository>
            <id>10_nexus</id>
            <url>http://repo.maven.apache.org/maven2/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>20_openecomp-public</id>
            <name>20_openecomp-public</name>
            <url>https://nexus.onap.org/content/repositories/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>30_openecomp-staging</id>
            <name>30_openecomp-staging</name>
            <url>https://nexus.onap.org/content/repositories/staging/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>40_openecomp-release</id>
            <name>40_openecomp-release</name>
            <url>https://nexus.onap.org/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>50_openecomp-snapshot</id>
            <name>50_openecomp-snapshot</name>
            <url>https://nexus.onap.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>60_opendaylight-mirror</id>
            <name>60_opendaylight-mirror</name>
            <url>https://nexus.opendaylight.org/content/repositories/public/</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>daily</updatePolicy>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>70_opendaylight-snapshot</id>
            <name>70_opendaylight-snapshot</name>
            <url>https://nexus.opendaylight.org/content/repositories/opendaylight.snapshot/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>ericsson-release</id>
            <name>ericsson-release</name>
            <url>https://arm1s11-eiffel004.eiffel.gic.ericsson.se:8443/nexus/content/groups/public</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

    </repositories>

    <distributionManagement>
        <site>
            <id>${project.artifactId}-site</id>
            <url>${project.url}</url>
        </site>
    </distributionManagement>

    <dependencies>
        <!-- ###### Onap dependencies found using https://nexus.onap.org/#nexus-search;quick~######## -->
        <dependency>
            <groupId>org.onap.policy.apex-pdp.core</groupId>
            <artifactId>core-engine</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.core</groupId>
            <artifactId>core-deployment</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.services</groupId>
            <artifactId>services-engine</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.plugins.plugins-executor</groupId>
            <artifactId>plugins-executor-javascript</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.plugins.plugins-event.plugins-event-carrier</groupId>
            <artifactId>plugins-event-carrier-restclient</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.plugins.plugins-context.plugins-context-schema</groupId>
            <artifactId>plugins-context-schema-avro</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.toto-castaldi.services.restServer</groupId>
            <artifactId>restServer</artifactId>
            <version>1.0</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.plugins.plugins-event.plugins-event-carrier</groupId>
            <artifactId>plugins-event-carrier-restserver</artifactId>
            <version>${apex.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.plugins.plugins-event.plugins-event-carrier</groupId>
            <artifactId>plugins-event-carrier-restrequestor</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.model</groupId>
            <artifactId>basic-model</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.auth</groupId>
            <artifactId>cli-editor</artifactId>
            <version>${apex.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>${jsonsimple.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.onap.policy.apex-pdp.plugins.plugins-event.plugins-event-carrier</groupId>
            <artifactId>plugins-event-carrier-kafka</artifactId>
            <version>${apex.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${version.kafka}</version>
            <classifier>test</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <version>${version.kafka}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <version>${version.kafka}</version>
            <classifier>test</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- below 4 dependency came with the empty project <dependency> <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId> </dependency> <dependency>
            <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope> </dependency> <dependency> <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId> <version>2.7.0</version> </dependency>
            <dependency> <groupId>io.springfox</groupId> <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version> </dependency> -->
    </dependencies>


    <build>
        <plugins>
            <!-- new came with the empty project -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.2</version>
                <executions>
                    <execution>
                        <id>validate-checkstyle</id>
                        <phase>test</phase>
                        <goals>
                            <goal>sonar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.2</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${basedir}/target/coverage-reports/jacoco-unit.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${basedir}/target/coverage-reports/jacoco-unit.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin> 

            <!-- Generate the APEX Policy JSON from the APEX CLI command -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <!-- <version>1.2.1</version> -->
                <executions>
                    <execution>
                        <id>generate-policy</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.onap.policy.apex.auth.clieditor.ApexCommandLineEditorMain</mainClass>
                            <classpathScope>compile</classpathScope>
                            <arguments>
                                <argument>--command-file=${project.basedir}/src/main/resources/policy/${policymodel.name}.apex</argument>
                                <argument>--output-model-file=${project.build.directory}/${policymodel.name}.json</argument>
                                <argument>--log-file=${project.build.directory}/${policymodel.name}_policygeneration.log</argument>
                                <argument>--working-dir=${project.basedir}</argument>
                                <argument>--ignore-failures=true</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build the tar ball -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-complete-tar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/package/tarball/assembly.xml</descriptor>
                            </descriptors>
                            <finalName>${install.package.name}-${project.version}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <untar src="${project.build.directory}/${install.package.name}-${project.version}-tarball.tar.gz" dest="${project.build.directory}/install_hierarchy" compression="gzip" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>fix-permissions</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <chmod file="${project.build.directory}/install_hierarchy/bin/*" perm="755" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Build the dpkg distribution -->
            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <deb>${project.build.directory}/${install.package.name}-${project.version}.deb</deb>
                            <controlDir>${basedir}/src/main/package/control</controlDir>
                            <dataSet>
                                <!-- Copy the Apex run time configuration -->
                                <data>
                                    <src>${project.build.directory}/install_hierarchy/lib</src>
                                    <type>directory</type>
                                    <dst>lib</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/opt/ericsson/apex/${install.package.name}-${project.version}/lib</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/install_hierarchy/bin</src>
                                    <type>directory</type>
                                    <dst>etc</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/opt/ericsson/apex/${install.package.name}-${project.version}/bin</prefix>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/install_hierarchy/etc</src>
                                    <type>directory</type>
                                    <dst>etc</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/opt/ericsson/apex/${install.package.name}-${project.version}/etc</prefix>
                                    </mapper>
                                </data>
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>1.0-beta-6</version>
            </extension>
        </extensions>
    </build>

    <profiles>
        <profile>
            <!--This profile is used to build the Docker image for the demo. -->
            <id>apexDocker</id>
            <activation>
                <property>
                    <name>apexDocker</name>
                </property>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.3.6</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>

                            <repository>${project.groupId}/${project.artifactId}</repository>
                            <tag>${project.version}</tag>
                            <server>
                                <id>docker-hub</id>
                                <username>docker</username>
                                <password>docker</password>
                            </server>
                            <serverId>docker-hub</serverId>
                            <registryUrl>https://index.docker.io/v1/</registryUrl>

                        </configuration>

                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!--This profile is used to store Eclipse m2e settings only. It has no
                influence on the Maven build itself. -->
            <id>only-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>exec-maven-plugin</artifactId>
                                                <versionRange>1.2.1</versionRange>
                                                <goals>
                                                    <goal>java</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute />
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
                <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies></dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.17</version>
                        <configuration>
                            <!-- Sets the VM argument line used when unit tests are run. -->
                            <argLine>${surefireArgLine}</argLine>
                            <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                            <skipTests>${skip.unit.tests}</skipTests>
                            <!-- Excludes integration tests when unit tests are run. -->
                            <excludes>
                                <exclude>**/IT*.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
    </profiles>
</project>
